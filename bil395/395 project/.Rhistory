install.packages("tidyverse")
install.packages("ggplot2")
install.packages("car")
install.packages("psych")
install.packages("ggpubr")
library(tidyverse)
library(ggplot2)
library(car)
library(psych)
library(ggpubr)
heart <- read.csv("C:/Users/ardac/OneDrive/Masa端st端/heart.csv")
heart <- read.csv("C:\\Users\\ardac\\OneDrive\\Masa端st端\\heart.csv")
heart <- read.csv("C:/Users/ardac/OneDrive/heart.csv")
head(heart)
str(heart)
heart$sex     <- as.factor(heart$sex)
heart$cp      <- as.factor(heart$cp)
heart$fbs     <- as.factor(heart$fbs)
heart$restecg <- as.factor(heart$restecg)
heart$exang   <- as.factor(heart$exang)
heart$slope   <- as.factor(heart$slope)
heart$ca      <- as.factor(heart$ca)
heart$thal    <- as.factor(heart$thal)
heart$target  <- as.factor(heart$target)
str(heart)
library(dplyr)
heart %>%
group_by(cp) %>%
summarise(
mean_chol = mean(chol),
sd_chol = sd(chol),
n = n()
)
library(ggplot2)
ggplot(heart, aes(x = chol)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue", color = "black") +
geom_density(color = "red", size = 1.2) +
facet_wrap(~ cp, scales = "free") +
theme_minimal()
ggplot(heart, aes(sample = chol)) +
stat_qq() +
stat_qq_line(color = "red") +
facet_wrap(~ cp) +
theme_minimal()
by(heart$chol, heart$cp, shapiro.test)
kruskal.test(chol ~ cp, data = heart)
install.packages("FSA")
library(FSA)
dunnTest(chol ~ cp, data = heart, method = "bonferroni")
install.packages("tidyverse")
install.packages("ggpubr")
install.packages("FSA")
install.packages("psych")
library(tidyverse)
library(ggpubr)
library(FSA)
library(psych)
data <- read.csv("C:/Users/ardac/OneDrive/user_behavior_dataset.csv")
head(data)
str(data)
data$Gender <- as.factor(data$Gender)
data$Operating.System <- as.factor(data$Operating.System)
data$User.Behavior.Class <- as.factor(data$User.Behavior.Class)
library(psych)
describe(data$Battery.Drain)
data %>%
group_by(User.Behavior.Class) %>%
summarise(
mean_battery = mean(Battery.Drain),
sd_battery = sd(Battery.Drain),
n = n()
)
data %>%
group_by(User.Behavior.Class) %>%
summarise(
mean_battery = mean(`Battery.Drain`),
sd_battery = sd(`Battery.Drain`),
n = n()
)
names(data) <- make.names(names(data))
data %>%
group_by(User.Behavior.Class) %>%
summarise(
mean_battery = mean(Battery.Drain),
sd_battery = sd(Battery.Drain),
n = n()
)
names(data)
data %>%
group_by(User.Behavior.Class) %>%
summarise(
mean_battery = mean(Battery.Drain..mAh.day.),
sd_battery   = sd(Battery.Drain..mAh.day.),
n            = n()
)
ggplot(data, aes(x = Battery.Drain..mAh.day.)) +
geom_histogram(aes(y = after_stat(density)), bins = 30, fill = "lightblue", color = "black") +
geom_density(color = "red", linewidth = 1.2) +
facet_wrap(~ User.Behavior.Class, scales = "free") +
theme_minimal()
ggplot(data, aes(sample = Battery.Drain..mAh.day.)) +
stat_qq() +
stat_qq_line(color = "red") +
facet_wrap(~ User.Behavior.Class) +
theme_minimal()
by(data$Battery.Drain..mAh.day., data$User.Behavior.Class, shapiro.test)
kruskal.test(Battery.Drain..mAh.day. ~ User.Behavior.Class, data = data)
library(FSA)
dunnTest(Battery.Drain..mAh.day. ~ User.Behavior.Class, data = data, method = "bonferroni")
part 2
ggplot(data, aes(x = App.Usage.Time..min.day., y = Battery.Drain..mAh.day.)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "App Usage Time (min/day)",
y = "Battery Drain (mAh/day)",
title = "Linear Regression: App Usage vs Battery Drain"
) +
theme_minimal()
model <- lm(Battery.Drain..mAh.day. ~ App.Usage.Time..min.day., data = data)
summary(model)
ggplot(data, aes(x = App.Usage.Time..min.day., y = Battery.Drain..mAh.day.)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "App Usage Time (min/day)",
y = "Battery Drain (mAh/day)",
title = "Linear Regression: App Usage vs Battery Drain"
) +
theme_minimal()
par(mfrow = c(2, 2))
plot(model)
shapiro.test(resid(model))
predict(model, data.frame(App.Usage.Time..min.day. = 500), interval = "confidence")
predict(model, data.frame(App.Usage.Time..min.day. = 500), interval = "confidence")
par(mfrow = c(2, 2))
plot(model)
load("~/.RData")
